{"version":3,"sources":["Components/TaskList.js","Components/TaskForm.js","common/helpers/httpInstance.js","common/constants/APIEndpoints.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","py5","paddingTop","start","margin","TaskList","tasks","users","setEditItem","deleteUser","classes","selectPriorityColor","priority","Fragment","className","Grid","container","item","xs","List","map","task","ListItem","ListItemAvatar","assigned_to","Avatar","alt","name","src","picture","ListItemText","primary","message","secondary","created_on","ListItemSecondaryAction","IconButton","edge","aria-label","color","onClick","id","renderList","root","paddingLeft","mxAuto","TaskForm","handleCreateTask","editItem","editUser","React","useState","anchorEl","setAnchorEl","anchorEl1","setAnchorEl1","due_date","form","setFormData","useEffect","console","log","priorities","handleClose","handleClose1","TextField","label","style","placeholder","fullWidth","value","onChange","e","target","InputLabelProps","shrink","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","user","MenuItem","renderUsers","parseInt","pr","require","config","httpInstance","axios","create","baseURL","interceptors","request","use","apiConfig","headers","err","Promise","reject","response","res","data","App","loading","setLoading","taskList","setTaskList","userList","setUserList","getUserList","setTimeout","getTaskList","httpMethod","get","then","appendData","formdata","Object","keys","key","append","Container","maxWidth","bodyFormData","FormData","taskid","post","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dca84ad9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Fireplace from \"@material-ui/icons/AssignmentTurnedInRounded\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    py5: {\r\n        paddingTop: \"4rem\",\r\n    },\r\n    start: {\r\n        margin: 0,\r\n    },\r\n}));\r\n\r\nexport default function TaskList({ tasks, users, setEditItem, deleteUser }) {\r\n    const classes = useStyles();\r\n\r\n    const selectPriorityColor = (priority) => {\r\n        switch (priority) {\r\n            case \"0\":\r\n                return \"action\";\r\n            case \"1\":\r\n                return \"primary\";\r\n\r\n            case \"2\":\r\n                return \"secondary\";\r\n            default:\r\n                return \"action\";\r\n        }\r\n    };\r\n\r\n    const renderList = () => {\r\n        if (tasks) {\r\n            return tasks.map((task) => (\r\n                <ListItem key={task.id}>\r\n                    <div className={classes.start}>\r\n                        <Grid item xs={3}>\r\n                            <ListItemAvatar>\r\n                                {task.assigned_to ? (\r\n                                    <Avatar\r\n                                        alt={users[task.assigned_to].name}\r\n                                        src={users[task.assigned_to].picture}\r\n                                    />\r\n                                ) : (\r\n                                    <Avatar>\r\n                                        <AccountCircle />\r\n                                    </Avatar>\r\n                                )}\r\n                            </ListItemAvatar>\r\n                        </Grid>\r\n                    </div>\r\n                    <Grid item xs={6}>\r\n                        <ListItemText\r\n                            primary={task.message}\r\n                            secondary={task.created_on}\r\n                        ></ListItemText>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                <Fireplace\r\n                                    color={selectPriorityColor(task.priority)}\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                <Edit\r\n                                    color=\"action\"\r\n                                    onClick={() => setEditItem(task)}\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                <DeleteIcon\r\n                                    onClick={() => deleteUser(task.id)}\r\n                                />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </Grid>\r\n                </ListItem>\r\n            ));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.py5}></div>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <List>{renderList()}</List>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport AddOutlined from \"@material-ui/icons/AddCircle\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PriorityHighRounded from \"@material-ui/icons/PriorityHighRounded\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: \"2rem\",\r\n    },\r\n    py5: {\r\n        paddingTop: \"4rem\",\r\n    },\r\n    mxAuto: {\r\n        margin: \"auto\",\r\n    },\r\n}));\r\nexport default function TaskForm({\r\n    users,\r\n    handleCreateTask,\r\n    editItem,\r\n    editUser,\r\n}) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n\r\n    const [form, setFormData] = useState({\r\n        message: \"\",\r\n        due_date: \"\",\r\n        priority: 0,\r\n        assigned_to: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (editItem) {\r\n            setFormData({\r\n                ...editItem,\r\n            });\r\n        } else {\r\n            setFormData({\r\n                message: \"\",\r\n                due_date: \"\",\r\n                priority: 0,\r\n                assigned_to: null,\r\n            });\r\n        }\r\n    }, [editItem]);\r\n\r\n    console.log(form);\r\n\r\n    const priorities = [0, 1, 2];\r\n\r\n    const { message, due_date, priority, assigned_to } = form;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClicka1 = (event) => {\r\n        setAnchorEl1(event.currentTarget);\r\n    };\r\n\r\n    const renderPriorities = () => {\r\n        return priorities.map((pr) => {\r\n            return (\r\n                <MenuItem\r\n                    key={pr}\r\n                    onClick={() => {\r\n                        handleClose1();\r\n                        setFormData({\r\n                            ...form,\r\n                            priority: parseInt(pr),\r\n                        });\r\n                    }}\r\n                >\r\n                    {pr}\r\n                </MenuItem>\r\n            );\r\n        });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClose1 = () => {\r\n        setAnchorEl1(null);\r\n    };\r\n\r\n    const renderUsers = () => {\r\n        if (users) {\r\n            return users.map((user) => {\r\n                return (\r\n                    <MenuItem\r\n                        key={user.id}\r\n                        onClick={() => {\r\n                            setFormData({\r\n                                ...form,\r\n                                assigned_to: user.id,\r\n                            });\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        <Avatar alt={user.name} src={user.picture} />\r\n                        {user.name}\r\n                    </MenuItem>\r\n                );\r\n            });\r\n        }\r\n    };\r\n\r\n    const selectPriorityColor = () => {\r\n        switch (parseInt(priority)) {\r\n            case 1:\r\n                return \"action\";\r\n            case 0:\r\n                return \"primary \";\r\n\r\n            case 2:\r\n                return \"secondary\";\r\n\r\n            default:\r\n                return \"action\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <div className={classes.py5}></div>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <TextField\r\n                        id=\"standard-full-width\"\r\n                        label=\"Create a task\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"taskname\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        value={message}\r\n                        onChange={(e) =>\r\n                            setFormData({ ...form, message: e.target.value })\r\n                        }\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.mxAuto}>\r\n                    <IconButton\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        {assigned_to ? (\r\n                            <Avatar\r\n                                alt={users[assigned_to].name}\r\n                                src={users[assigned_to].picture}\r\n                            />\r\n                        ) : (\r\n                            <AccountCircle />\r\n                        )}\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {renderUsers()}\r\n                    </Menu>\r\n                    <IconButton aria-label=\"add\">\r\n                        <PriorityHighRounded\r\n                            color={selectPriorityColor()}\r\n                            onClick={handleClicka1}\r\n                        />\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl1}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl1)}\r\n                            onClose={handleClose1}\r\n                        >\r\n                            {renderPriorities()}\r\n                        </Menu>\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"add\">\r\n                        {!editItem ? (\r\n                            <AddOutlined\r\n                                color=\"primary\"\r\n                                onClick={() => handleCreateTask(form)}\r\n                            />\r\n                        ) : (\r\n                            <Edit\r\n                                color=\"secondary\"\r\n                                onClick={() => editUser(form)}\r\n                            />\r\n                        )}\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../constants/APIEndpoints\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst httpInstance = axios.create({\r\n\tbaseURL: BASE_URL,\r\n});\r\n\r\nhttpInstance.interceptors.request.use(\r\n\t(apiConfig) => {\r\n\t\tapiConfig.headers[\"AuthToken\"] = \"0ruAaKiEo46PUYqMxFHH895DWivpeVrZ\";\r\n\t\treturn { ...apiConfig };\r\n\t},\r\n\t(err) => {\r\n\t\treturn Promise.reject(err);\r\n\t}\r\n);\r\n\r\nhttpInstance.interceptors.response.use(\r\n\t(res) => {\r\n\t\treturn res.data;\r\n\t},\r\n\t(err) => {\r\n\t\treturn err;\r\n\t}\r\n);\r\n\r\nexport default httpInstance;\r\n","export const BASE_URL = \"https://devza.com/tests/\";\r\nexport const CREATE_TASK = \"/tasks/create\";\r\nexport const LIST_USER = \"/tasks/listusers\";\r\nexport const UPDATE_TASKS = \"tasks/update\";\r\nexport const DELETE_TASK = \"/tasks/delete\";\r\nexport const LIST_TASK = \"/tasks/list\";\r\n","import React, { useState, useEffect } from \"react\";\nimport { TaskList, TaskForm } from \"./Components/index\";\nimport { Container } from \"@material-ui/core\";\nimport httpMethod from \"./common/helpers/httpInstance\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nimport {\n    CREATE_TASK,\n    DELETE_TASK,\n    LIST_TASK,\n    UPDATE_TASKS,\n    LIST_USER,\n} from \"./common/constants/APIEndpoints\";\n\nfunction App() {\n    const [loading, setLoading] = useState(false);\n    const [taskList, setTaskList] = useState(null);\n    const [userList, setUserList] = useState(null);\n    const [editItem, setEditItem] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        getUserList();\n        setTimeout(() => {\n            getTaskList();\n        }, 1000);\n    }, []);\n\n    const getUserList = () => {\n        httpMethod.get(LIST_USER).then((res) => {\n            setUserList(res.users);\n        });\n    };\n\n    const getTaskList = () => {\n        httpMethod.get(LIST_TASK).then((res) => {\n            setTaskList(res.tasks);\n            setLoading(false);\n        });\n    };\n\n    const appendData = (formdata, data) => {\n        Object.keys(data).map((key) => {\n            formdata.append(key, data[key]);\n        });\n    };\n    const createUser = (data) => {\n        var bodyFormData = new FormData();\n        const appData = appendData(bodyFormData, data);\n\n        setLoading(true);\n        httpMethod\n            .post(CREATE_TASK, bodyFormData)\n            .then((res) => {\n                setTaskList(null);\n\n                getTaskList();\n                setLoading(false);\n            })\n            .catch((err) => setLoading(false));\n    };\n\n    const editUser = (data) => {\n        var bodyFormData = new FormData();\n        const appData = appendData(bodyFormData, {\n            ...data,\n            taskid: editItem.id,\n        });\n        setLoading(true);\n        httpMethod\n            .post(UPDATE_TASKS, bodyFormData)\n            .then((res) => {\n                setTaskList(null);\n                getTaskList();\n                setLoading(false);\n                setEditItem(null);\n            })\n            .catch((err) => {\n                setLoading(false);\n            });\n    };\n\n    const deleteUser = (data) => {\n        var bodyFormData = new FormData();\n        const appData = appendData(bodyFormData, { taskid: data });\n        setLoading(true);\n        httpMethod.post(DELETE_TASK, bodyFormData).then((res) => {\n            console.log(res);\n            setLoading(false);\n            setTaskList(null);\n            getTaskList();\n            setLoading(false);\n        });\n    };\n    return (\n        <Container maxWidth=\"sm\">\n            <ul>\n                <li>\n                    *To edit click on <Edit /> in List Item. Form will update\n                    fields. You can change all the field and press on edit\n                    button to save.\n                </li>\n                <li>*form is resusable </li>\n            </ul>\n            <TaskForm\n                editUser={editUser}\n                editItem={editItem}\n                users={userList}\n                tasks={taskList}\n                handleCreateTask={createUser}\n            />\n            {!loading ? (\n                <TaskList\n                    users={userList}\n                    tasks={taskList}\n                    setEditItem={setEditItem}\n                    deleteUser={deleteUser}\n                />\n            ) : (\n                <div>Loading...</div>\n            )}\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}